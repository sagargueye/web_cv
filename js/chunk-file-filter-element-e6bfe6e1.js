System.register(["./chunk-vendor.js","./chunk-frameworks.js","./chunk-file-filter-persistence.js"],function(u){"use strict";var o,h,f,p,F;return{setters:[function(l){o=l.t,h=l.b,f=l.c},function(l){p=l.b3},function(l){F=l.u}],execute:function(){var l=Object.defineProperty,g=Object.getOwnPropertyDescriptor,y=(e,t)=>l(e,"name",{value:t,configurable:!0}),s=(e,t,n,c)=>{for(var r=c>1?void 0:c?g(t,n):t,d=e.length-1,a;d>=0;d--)(a=e[d])&&(r=(c?a(t,n,r):a(r))||r);return c&&r&&l(t,n,r),r};let i=u("FileFilterElement",class extends HTMLElement{connectedCallback(){this.updateFileInputs(),this.updateFilterState()}updateFileInputs(e){e&&this.instrumentFilterToggle(e);const t={hideDeletedFiles:this.shouldHideDeletedFiles,hideViewedFiles:this.shouldHideViewedFiles,showManifestFilesOnly:this.shouldShowManifestFilesOnly,selectedOwners:Array.from(this.selectedOwners()),showCodeownersFiles:this.shouldShowOwnedFilesOnly,selectedFileTypes:Array.from(this.selectedFileTypes()),fileTypeFilterActive:this.fileTypeFilterActive,filtersActive:this.filtersActive};this.dispatchEvent(new CustomEvent("file-filter-change",{detail:t})),this.updateFilterState(),this.updateUrl()}updateFilterState(){this.activateFilterHighlight(),this.toggleSelectAll(),this.toggleFileTypeCounts(),this.toggleAvailableOptions()}enableAllFileInputs(){if(!!this.fileTypeFilterActive){for(const e of this.fileExtensions)e.checked=!0;this.updateFileInputs()}}get filtersActive(){return this.fileTypeFilterActive||this.shouldShowOwnedFilesOnly||this.shouldHideDeletedFiles||this.shouldHideViewedFiles||this.shouldShowManifestFilesOnly}activateFilterHighlight(){this.filtersActive?this.fileFilterActiveText.classList.toggle("color-fg-accent",!0):this.fileFilterActiveText.classList.toggle("color-fg-accent",!1)}toggleSelectAll(){const e=this.fileTypeFilterActive,t=this.fileTypeFilterActive?"data-select-all-markup":"data-all-selected-markup",n=this.selectAllContainer.getAttribute(t);this.selectAllContainer.textContent=n,this.selectAllContainer.classList.toggle("color-fg-muted",!e),this.selectAllContainer.classList.toggle("color-fg-accent",e)}toggleFileTypeCounts(){for(const e of this.fileTypeCount){const t=this.shouldHideDeletedFiles?"data-non-deleted-file-count-markup":"data-all-file-count-markup",n=e.getAttribute(t);n&&(e.textContent=n)}}toggleAvailableOptions(){for(const e of this.fileExtensions)if(this.shouldHideDeletedFiles){const t=e.getAttribute("data-non-deleted-files-count")==="0";e.disabled=t}else e.disabled=!1}instrumentFilterToggle(e){const t=e.currentTarget,c={file_filter_checked:t.checked};t.setAttribute("data-hydro-client-context",JSON.stringify(c)),p(t)}get fileTypeFilterActive(){return Array.from(this.selectedFileTypes()).length!==this.fileExtensions.length}get whitespaceFilterActive(){return new URLSearchParams(window.location.search).has("w")}*selectedFileTypes(){for(const e of this.fileExtensions)e.checked&&(yield e.value)}get shouldShowOwnedFilesOnly(){return Array.from(this.selectedOwners()).length>0}*selectedOwners(){for(const e of this.codeownersFilterInputs)e.checked&&(yield e.value)}get shouldShowManifestFilesOnly(){var e;return!!((e=this.manifestFilesInput)==null?void 0:e.checked)}get shouldHideDeletedFiles(){return!!this.deletedFilesInput&&!this.deletedFilesInput.checked}get shouldHideViewedFiles(){return!this.viewedFilesInput.checked}updateUrl(){F(this.fileTypeFilterActive,this.whitespaceFilterActive,Array.from(this.selectedFileTypes()),this.shouldShowOwnedFilesOnly,Array.from(this.selectedOwners()),this.shouldShowManifestFilesOnly,this.shouldHideDeletedFiles,this.shouldHideViewedFiles)}});y(i,"FileFilterElement"),s([o],i.prototype,"deletedFilesInput",2),s([o],i.prototype,"manifestFilesInput",2),s([o],i.prototype,"viewedFilesInput",2),s([h],i.prototype,"codeownersFilterInputs",2),s([h],i.prototype,"fileExtensions",2),s([o],i.prototype,"selectAllContainer",2),s([o],i.prototype,"fileFilterActiveText",2),s([h],i.prototype,"fileTypeCount",2),i=u("FileFilterElement",s([f],i))}}});
//# sourceMappingURL=chunk-file-filter-element-079d30b3.js.map
