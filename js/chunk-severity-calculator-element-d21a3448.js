System.register(["./chunk-vendor.js","./chunk-frameworks.js"],function(d){"use strict";var a,m,v,S,h;return{setters:[function(l){a=l.t,m=l.b,v=l.d,S=l.c},function(l){h=l.v}],execute:function(){var l=Object.defineProperty,E=Object.getOwnPropertyDescriptor,y=(e,t)=>l(e,"name",{value:t,configurable:!0}),n=(e,t,i,s)=>{for(var r=s>1?void 0:s?E(t,i):t,c=e.length-1,u;c>=0;c--)(u=e[c])&&(r=(s?u(t,i,r):u(r))||r);return s&&r&&l(t,i,r),r};const p={AV:{N:!0,A:!0,L:!0,P:!0},AC:{L:!0,H:!0},PR:{N:!0,L:!0,H:!0},UI:{N:!0,R:!0},S:{U:!0,C:!0},C:{N:!0,L:!0,H:!0},I:{N:!0,L:!0,H:!0},A:{N:!0,L:!0,H:!0}},g={critical:"Label--danger",high:"Label--orange",moderate:"Label--warning",low:"Label--primary"};let o=d("default",class extends HTMLElement{constructor(){super(...arguments);this.pendingScoreTextColorClass="color-fg-muted"}hide(){this.hidden=!0,this.vectorStringInput.required=!1,this.hideFormGroupError(this.vectorStringFieldElement),this.vectorStringInput.setCustomValidity(""),h(this.vectorStringInput.form)}show(){this.hidden=!1,this.vectorStringInput.required=!0,this.vectorStringInput.value!==""&&this.validateVectorStringInput()}hideFormGroupError(e){e.classList.contains("errored")&&e.classList.remove("errored")}showFormGroupError(e){e.classList.contains("errored")||e.classList.add("errored")}isValidCVSS3(e){return this.buildCVSS3ErrorMessage(e)===""}buildCVSS3ErrorMessage(e){if(e==="")return this.vectorStringError.getAttribute("data-empty-cvss-error-message")||"";if(!/^CVSS:3\.\d+(\/[^:]+:[^:]+){8}$/.test(e))return this.vectorStringError.getAttribute("data-error-message")||"";const i=e.split("/").slice(1);for(const s of i){const[r,c]=s.split(":");if(!p[r])return(this.vectorStringError.getAttribute("data-invalid-metric-error-message")||"").replace("{}",r);if(!p[r][c])return(this.vectorStringError.getAttribute("data-invalid-metric-value-error-message")||"").replace("{}",c).replace("{}",r)}return""}validateVectorStringInput(){const e=this.buildCVSS3ErrorMessage(this.vectorStringInput.value);return e?(this.vectorStringError.textContent=e,this.showFormGroupError(this.vectorStringFieldElement),this.vectorStringInput.setCustomValidity("error")):(this.hideFormGroupError(this.vectorStringFieldElement),this.vectorStringInput.setCustomValidity("")),h(this.vectorStringInput.form),!e}handleVectorStringBlur(){this.validateVectorStringInput()?(this.calculateScore(),this.scoreElement.classList.remove(this.pendingScoreTextColorClass)):(this.hideSeverityLabel(),this.scoreElement.textContent=this.scoreElement.getAttribute("data-empty-message"),this.scoreElement.classList.add(this.pendingScoreTextColorClass))}connectedCallback(){this.handleVectorStringInput()}handleVectorStringInput(){const i=this.vectorStringInput.value.split("/").slice(1).reduce((s,r)=>{const[c,u]=r.split(":");return{...s,[c]:u}},{});for(const s of this.metricSelectionElements){const r=s.metricCode,c=i[r];s.selectFromCode(c)}}regenerateVectorString(){let e="CVSS:3.1";for(const t of this.metricSelectionElements){const i=t.metricCode,s=t.selectedValue||"_";e+=`/${i}:${s}`}this.vectorStringInput.value=e}handleMetricSelectionChange(){this.regenerateVectorString(),this.hideFormGroupError(this.vectorStringFieldElement),this.isValidCVSS3(this.vectorStringInput.value)?(this.vectorStringInput.setCustomValidity(""),this.calculateScore(),this.scoreElement.classList.remove(this.pendingScoreTextColorClass)):this.vectorStringInput.setCustomValidity("error"),h(this.vectorStringInput.form)}async calculateScore(){this.hideFormGroupError(this.scoreFieldElement);let e;try{e=await this.fetchScoreData()}catch{this.showFormGroupError(this.scoreFieldElement);return}this.scoreElement.textContent=e.score.toFixed(1);const t=e.severity.toLowerCase();this.showSeverityLabel(t)}async fetchScoreData(){const e=new FormData;e.append("cvss_v3",this.vectorStringInput.value);const t=this.scoreElement.getAttribute("data-action-url");if(!t)throw new Error("The endpoint url to get the score must be specified");const i=await fetch(t,{method:"POST",headers:{Accept:"application/json","Scoped-CSRF-Token":this.scoreAuthenticityTokenInput.value},body:e});return i.ok?i.json():Promise.reject(new Error("Score could not be calculated"))}hideSeverityLabel(){this.severityLabelElement.hidden=!0}showSeverityLabel(e){this.severityLabelElement.textContent=e;const t=g[e];this.severityLabelElement.classList.contains(t)||(this.severityLabelElement.classList.remove(...Object.values(g)),this.severityLabelElement.classList.add(t)),this.severityLabelElement.hidden&&(this.severityLabelElement.hidden=!1)}});y(o,"SeverityCalculatorElement"),n([a],o.prototype,"vectorStringFieldElement",2),n([a],o.prototype,"vectorStringInput",2),n([a],o.prototype,"vectorStringError",2),n([m],o.prototype,"metricSelectionElements",2),n([a],o.prototype,"scoreFieldElement",2),n([a],o.prototype,"scoreAuthenticityTokenInput",2),n([a],o.prototype,"scoreElement",2),n([a],o.prototype,"severityLabelElement",2),n([v(100)],o.prototype,"handleVectorStringInput",1),o=d("default",n([S],o))}}});
//# sourceMappingURL=chunk-severity-calculator-element-62610d38.js.map
